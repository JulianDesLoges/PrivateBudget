@page "/entries"
@using PrivateBudget.Client.Models;
@using PrivateBudget.Components
@inject HttpClient Http

<PageTitle>Entries</PageTitle>

<div class="container-fluid p-0">
    <div class="row">
        <div class="col-xxl-8 p-3">
            <EntriesComponent @ref="_entries" Entries="App.UserData.Plan.Entries" />
        </div>
        <div class="col-xxl-4 p-3">
            <CategoriesComponent @ref="_categories" Plan="@App.UserData.Plan"/>
        </div>
    </div>
</div>


@code {
    private EntriesComponent? _entries;
    private CategoriesComponent? _categories;


    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            if (_categories == null)
            {
                throw new NullReferenceException("_categories is null.");
            }

            if (_entries == null)
            {
                throw new NullReferenceException("_entries is null.");
            }

            _categories.CategoriesChanged += CategoriesChanged;
        }
    }


    private void CategoriesChanged()
    {
        // Update all entries with a category that is no longer in the list of categories to "no category" O(n*m)!!
        foreach (var entry in App.UserData.Plan.Entries)
        {
            if (entry.Category == null) { continue; }

            if (!App.UserData.Plan.Categories.Contains(entry.Category))
            {
                entry.Category = null;
            }
        }

        _entries?.UpdateState();
    }


    public void UpdateState()
    {
        _entries?.UpdateState();
        _entries?.UpdateState();
        StateHasChanged();
    }
}
